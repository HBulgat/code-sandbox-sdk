import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.CloseableHttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.mime.MultipartEntityBuilder;
import org.apache.http.impl.client.CloseableHttpClientFactory;
import org.apache.http.impl.client.CloseableHttpClientImpl;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;


public class ApacheHttpClientExample {
    public static void main(String[] args) {
        String url = "http://localhost:8077/api/execute_code/test";
        String filePath1 = "/home/bulgat/IdeaProjects/code-sandbox-sdk/docs/111.txt";
        String filePath2 = "/home/bulgat/IdeaProjects/code-sandbox-sdk/docs/222.txt";
        // 创建一个 HttpClient 实例
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            // 创建一个 HttpPost 请求对象
            HttpPost httpPost = new HttpPost(url);
            // 创建 MultipartEntityBuilder 用于构建多部分请求体
            MultipartEntityBuilder builder = MultipartEntityBuilder.create();
            // 设置边界，避免使用默认边界，可提高兼容性
            builder.setBoundary("----WebKitFormBoundary7MA4YWxkTrZu0gW");
            // 添加文件部分
            builder.addBinaryBody("files", new File(filePath1), ContentType.DEFAULT_BINARY, "file1.txt");
            builder.addBinaryBody("files", new File(filePath2), ContentType.DEFAULT_BINARY, "file2.txt");
            // 添加 ExecuteCodeRequest 部分，将其作为 JSON 数据发送
            String executeCodeRequestJson = "{\"code\":\"your_code\",\"language\":\"java\",\"inputList\":null}";
            builder.addTextBody("executeCodeRequestDTO", executeCodeRequestJson, ContentType.APPLICATION_JSON);
            // 构建请求实体
            HttpEntity entity = builder.build();
            // 将请求实体设置到 HttpPost 请求中
            httpPost.setEntity(entity);
            // 执行请求
            HttpResponse response = httpClient.execute(httpPost);
            // 获取响应状态码
            int statusCode = response.getStatusLine().getStatusCode();
            if (statusCode == 200) {
                // 获取响应内容
                String responseBody = EntityUtils.toString(response.getEntity(), StandardCharsets.UTF_8);
                System.out.println(responseBody);
            } else {
                System.out.println("POST request failed with response code: " + statusCode);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
